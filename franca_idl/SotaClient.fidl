// (c) 2015,2016 - Jaguar Land Rover.
//
// Mozilla Public License 2.0
//
// GENIVI Software Management IDL
//

// Abbreviatioms:
// SC - SOTA CLient
// SWLM - Software Loading Manager
// ML - Module Loader (one instance per external module)
// PackMgr - Package Manager
// PartMgr - Partition Manager
// HMI - Human Machine Interface (IVI screen)
// LocMedMgr - Local Media Manager
// CEDM - Consumer Electronics Device Manager


package org.genivi.swm

<** @description: 
Software Over The Air Client API
**>
interface SotaClient {
	version { major 1 minor 0 }

	<** 
	@description: 
	Sent by SC to start the download of an update previously announced
	as available through an update_available() call made from SC to
	SWLM.
	**>
	method initiateDownload {
		in {
			<** @description:
			ID of update to download. 
			The value is provided by the update_available() call made from SC
			to SWLM to announce the update availability.
			**>
			String updateId
		}
	}

	<** 
	@description: 
	Abort a download previously initiated with initiate_download().
	Invoked by SWLM in response to an error or an explicit
	request sent by HMI to SWLM in response to a user abort.
	**>
	method abortDownload {
		in {
			<** @description:
			Package ID of update to abort..
			The value was previously provided to a initiateDownload() call 
			made from SWLM to SC.
			**>
			String updateId
		}
	}

	<** 
	@description: 
	Receive an update report from SWLM with the processing result of all
	bundled operations.
	An update report message can either be sent in response
	to an downloadComplete() message transmitted from SC to SWLM,
	or be sent unsolicited by SWLM to SC 
	**>
	method updateReport {
		in {
			<** @description:
			Package ID of update reported.
			The value is provided by the updateAvailable() call made from SC
			to SWLM to announce the update availability.
			**>
			String updateId

			<** @description: 
			A list of operation results. Each result is associated
			with its original update manifest entry through the id 
			field.
			**>
			array operationsResults of OperationResult
		}
	}


	<** @description:
	A single result of a software operation, included in an 
	updateReport().
	**>
	struct OperationResult {
		<** @description: 
		The operation id, as specified by the manifest's 
		operstions.id field.
		**>
		String id

		<** @description: 
		The result code reported by PackMgr, PartMgr, or ML
		for the given operation.
		**>
		SWMResult resultCode

		<** @description: 
		A descriptive result text reported by PackMgr, PartMgr, or ML
		for the given operation.
		**>
		String resultText
	}
}
