// (c) 2015 - Jaguar Land Rover.
//
// Mozilla Public License 2.0
//
// GENIVI Software Management IDL
//
// NOTE:
//   This file is not a part of the GENIVI specification.
//   The module loader is still a placeholder component with
//   no defined API. This FrancaIDL file only here to reflect
//   the API implemented by the PoC code.
//
// Abbreviatioms:
// SC - SOTA CLient
// SWLM - Software Loading Manager
// ML - Module Loader (one instance per external module)
// PackMgr - Package Manager
// PartMgr - Partition Manager
// HMI - Human Machine Interface (IVI screen)
// LocMedMgr - Local Media Manager


package org.genivi.swm

<** @description: 
Module Loader API.
There will be one specific module loader component instance for 
each external module that can be flashed by the system.
**>
interface ml {
	version { major 1 minor 0 }

	<** 
	@description: 
	Flash a new firmware to the module managed
	by the component.
	**>
	method flash_module_firmware {
		in {
			<** @description:
			The transaction ID to send back with the operation_result()
			message that reports the outcome of the firmware flashing.
			**>
			String transaction_id

			<** @description:
			A path to the local file system where the firwmare 
			image to reflash the module can be found.
			**>
			String image_path
			

			<** @description:
			A list of SHA256 check sums of firwmare
			(pointed out by image_path) that are not to be flashed
			**>
			array blacklisted_firmware of String
			
		}
	}

	<** @description:
	Retrieve information about the firmware running on the
	external module controlled by the component.
	**>
	method get_module_firmware_version {
		out {
			<** @description:
			The version id string for the currently installed 
			firmware.
			**>
			String firmware_id

			<** @description: 
			The unix time stamp of when the module was flashed
			with the given firmware version
			**>
			UInt64 last_modified
		}
	}
}
